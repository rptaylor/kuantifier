cronjob:
  schedule: "@daily"
  priorityClassName: ""
  ttlSecondsAfterFinished: 7776000

  # Optional: Set [nodeSelector](https://kubernetes.io/docs/tasks/configure-pod-container/assign-pods-nodes/) for
  # pods created by the cronjob
  # nodeSelector:
  #   disktype: ssd

  # Optional: Set [tolerations](https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/) for
  # pods created by the cronjob
  # tolerations:
  # - key: "sample"
  #   operator: "Exists"
  #   effect: "NoSchedule"

# "ssmsend" or "gratia"
outputFormat: ssmsend


# If true, /cvmfs/grid.cern.ch/etc/grid-security/certificates/ will be mounted as a hostPath volume.
# If false, you will need to set up an alternative way of providing the ca-policy-* packages and CRLs in the ssmsend container.
gridSecurityHostPath: true

# If pspName is defined, this PSP will be used. If gridSecurityHostPath, use of a (read-only) /cvmfs hostPath is required.
# Other than that no special privileges are required so a default PSP should be sufficient.
pspName: ""

# UID and GID for the pod service user
user:
  uid: 10000
  gid: 10000

# Size of the data volume in which to store intermediate APEL records. outputFormat "gratia"
# outputs individual records rather than summaries, and may require a larger data volume size.
dataVolumeSize: 1000M

# container-level securityContext
containerSecurityContext:
  privileged: false
  allowPrivilegeEscalation: false
  capabilities:
    drop:
      - ALL
  seccompProfile:
    type: RuntimeDefault

processor:
  image_repository: "hub.opensciencegrid.org/iris-hep/kuantifier-processor"
  # Optionally overwrite container version.
  image_tag: "1.0.2"
  image_pull_policy: "IfNotPresent"
  resources:
    # very generous estimate: approx 10 KiB memory per job record
    limits:
      cpu: "1"
      memory: "2000Mi"
    requests:
      cpu: "0.5"
      memory: "500Mi"
  # Config values for the processor initContainer. See KAPELConfig.py for full details on required configuration.
  config:
    # Name of the site being reported on
    # SITE_NAME: "EXAMPLE-T2"
    
    # Uniquely identifying name for the cluster
    # SUBMIT_HOST: "k8s.example.org:6443/namespace"
    
    # Namespace in the cluster where workload pods run
    # NAMESPACE: "example-namespace"
    
    # Virtual Organization Name
    VO_NAME: "example-vo"
    # Works for a default installation of the bitnami/kube-prometheus Helm chart, otherwise use http://<service>.<namespace>:<port>
    PROMETHEUS_SERVER: "http://kube-prometheus-prometheus.kube-prometheus:9090"
    # Value to use for normalizing by CPU performance. Required for ssmsend output mode only
    #BENCHMARK_VALUE: "15.0"

  # Authentication secret for Prometheus, if any
  prometheus_auth:
    secret: null
    key: null

ssmsend:
  resources:
    limits:
      cpu: "0.5"
      memory: "500Mi"
    requests:
      cpu: "0.1"
      memory: "50Mi"
  # Whether to actually send data. Use false for testing.
  enabled: true
  # Location of ssmsend container. Feel free to instead build your own using the provided Containerfile.
  image_repository: "git.computecanada.ca:4567/rptaylor/misc/ssmsend"
  # Optionally overwrite container version.
  image_tag: "3.4.1"
  host: "msg.argo.grnet.gr"
  # Provide the name of an existing secret containing x509cert.pem and x509key.pem.
  # This is useful if managing secrets externally (e.g., with SealedSecrets).
  # If this is set, x509cert and x509key below will be ignored.
  existingSecret: ""
  # base64-encoded strings of the X509 public cert and private key for APEL publisher.
  # Using a base64 encoded string with no line breaks avoids issues of indentation and double YAML encoding if Ansible is used for Helm.
  x509cert: aW5zZXJ0IGJhc2U2NC1lbmNvZGVkIHN0cmluZyBvZiB0aGUgWDUwOSBwdWJsaWMgY2VydCBmb3IgQVBFTCBwdWJsaXNoZXIK
  x509key: aW5zZXJ0IGJhc2U2NC1lbmNvZGVkIHN0cmluZyBvZiB0aGUgWDUwOSBwcml2YXRlIGtleSBmb3IgQVBFTCBwdWJsaXNoZXIK

gratia:
  resources:
    limits:
      cpu: "0.5"
      memory: "500Mi"
    requests:
      cpu: "0.1"
      memory: "50Mi"
  # Location of gratia output container.
  image_repository: "hub.opensciencegrid.org/iris-hep/kuantifier-gratia-output"
  # Optionally overwrite container version.
  image_tag: "1.0.1"
  # Config options for Gratia.
  config: 
    # Location of the Gratia probe config file. Can usually be kept as default
    GRATIA_CONFIG_PATH: "/etc/gratia/kubernetes/ProbeConfig"


nameOverride: ""
fullnameOverride: ""
extraObjects: []
